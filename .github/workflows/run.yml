name: Run tests

on:
  workflow_dispatch:
  push:
    paths:
      - matchmaking/*

jobs:
  setup-docker:
    runs-on: ubuntu-latest
    outputs:
      docker_setup_complete: true
    steps:
      - name: Cache Docker installation
        id: cache-docker
        uses: actions/cache@v4
        with:
          path: /usr/local/bin/docker* # Path to commonly installed Docker binaries
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile', '**/docker-compose.yml') }} # Key based on OS and Docker-related files

      - name: Install Docker if not cached
        if: steps.cache-docker.outputs.cache-hit != 'true'
        run: |
          for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove -y $pkg; done
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl
          sudo rm -f /var/lib/man-db/auto-update
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin # Install Docker Engine and Compose V2
          docker version
          docker compose version

  Testing:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: setup-docker

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify Docker
        run: |
          docker version
          docker compose version

      - name: Start containers
        run: docker compose -f "docker-compose.yml" up --build --abort-on-container-exit

      - name: Archive tests
        uses: actions/upload-artifact@v4
        with:
          name: secret-tests-${{ github.REPOSITORY_ID }}
          path: ./logs/result.csv
          if-no-files-found: error